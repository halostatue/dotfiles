{{- $has := includeTemplate "programs" . | fromJson -}}
{{- $pager := "less -SX" -}}
{{- $watch_pager := $pager -}}
{{- if $has.ov -}}
{{-   $pager = printf "%s -F -C -d \"|\" -H1 --column-rainbow --align" $has.ov -}}
{{-   $watch_pager = printf "%s --follow-section --section-delimiter \"^$\"" $has.ov -}}
{{- end -}}
-- vim: ft=sql
-- Official docs: http://www.postgresql.org/docs/9.3/static/app-psql.html
-- http://robots.thoughtbot.com/improving-the-command-line-postgres-experience/
-- https://github.com/eevee/rc/blob/master/.psqlrc
-- http://craigkerstiens.com/2013/02/13/How-I-Work-With-Postgres/
-- https://github.com/hgmnz/dotfiles/blob/master/psqlrc

\set QUIET 1
\pset null '[NULL]'

\set PROMPT1 '%[%033[1m%]%M %n@%/%R%[%033[0m%]%# '
\set PROMPT2 '[more] %R > '

-- Show how long each query takes to execute
\timing on

\setenv PAGER '{{ $pager }}'
\setenv WATCH_PAGER '{{ $watch_pager}}'

\pset format wrapped
\pset linestyle unicode
\pset border 2

-- Use best available output format
-- \x auto

-- \set VERBOSITY verbose
\set HISTFILE ~/.cache/psql_history- :DBNAME
\set HISTCONTROL ignoredups
\set COMP_KEYWORD_CASE upper

\unset QUIET

-- psql can't check for a file's existence, so we'll provide an empty local
-- file that users can override with their custom dotfiles. To set your own
-- personal settings, place your own file in ~/.psqlrc.local
\i ~/.psqlrc.local
