{{- $account_vaults := includeTemplate "1p/vaults" . | fromJson -}}
{{- $identities := dict }}
{{- range $account_name, $account := $account_vaults -}}
{{-   $vaults := $account.vaults -}}
{{-   $params := dict "account" $account.url "startswith" "git-identities: " "tags" $.git_identities -}}
{{-   $documents := includeTemplate "1p/documents" $params | fromJson -}}
{{-   $a_ids := dict }}
{{-   range $document := $documents -}}
{{-     $name := $document.title | trimPrefix "git-identities: " | trimSuffix ".yml" -}}
{{-     $raw := onepasswordDocument $document.id $document.vault.id $account.url -}}
{{-     $data := $raw | fromYaml -}}
{{-     if or (has "*" $data.tags.role) (has $.role $data.tags.role) -}}
{{-       $key := $data.key}}
{{-       $vault := "" -}}
{{-       if typeIs "map[string]interface {}" $key -}}
{{-         $vault = $key.vault -}}
{{-         $key = onepasswordRead (printf "op://%s/%s/public key" $key.vault $key.id) $account.url -}}
{{-       else if and (kindIs "string" $key) (regexMatch "^op://") -}}
{{-         $vault = (split "/" $key)._2 -}}
{{-         $key = onepasswordRead $key $account.url }}
{{-       end -}}
{{-       $data = mergeOverwrite $data (dict "key" $key "vault" $vault) -}}
{{-       $id := dict
            "account"   $account.url
            "sha256sum" (sha256sum $raw)
            "file"      $raw
            "data"      $data
-}}
{{-       $a_ids = mergeOverwrite $a_ids (dict $name $id) -}}
{{-     end -}}
{{-   end -}}
{{-   $identities = mergeOverwrite $identities (dict $account_name $a_ids) -}}
{{- end -}}
{{- toJson $identities -}}
