# vim: set ft=zsh.chezmoitmpl

## zsh configuration
setopt HIST_IGNORE_ALL_DUPS
setopt INC_APPEND_HISTORY
setopt SHARE_HISTORY
bindkey -e
setopt CORRECT # Prompt for spelling correction
# Remove / from WORDCHARS to jump between path components
WORDCHARS=${WORDCHARS//[\\/]}

HISTFILE="${XDG_CACHE_HOME:$HOME/.cache}/zsh/zsh_history"
mkdir -p "$(dirname "$HISTFILE")"

## zim config
# zim is managed by chezmoi
zstyle ':zim' disable-version-check yes
zstyle ':zim:zmodule' use 'degit'
zstyle ':zim:completion' dumpfile "${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompdump"
zstyle ':zim:completion' cache-path "${XDG_CACHE_HOME:-$HOME/.cache}/zsh/zcompcache"

## Module config
# Disable automatic widget re-binding on each precmd. This can be set when
# zsh-users/zsh-autosuggestions is the last module in your ~/.zimrc.
ZSH_AUTOSUGGEST_MANUAL_REBIND=1

# Set what highlighters will be used.
# See https://github.com/zsh-users/zsh-syntax-highlighting/blob/master/docs/highlighters.md
ZSH_HIGHLIGHT_HIGHLIGHTERS=(main brackets)

## Initialize zim
ZIM_CONFIG_FILE=$HOME/.config/zsh/zimrc
ZIM_HOME=$HOME/.local/share/zim

# Install missing modules and update ${ZIM_HOME}/init.zsh if missing or outdated.
if [[ ! "$ZIM_HOME/init.zsh" -nt "$ZIM_CONFIG_FILE" ]]; then
  source "$ZIM_HOME/zimfw.zsh" init -q
fi

source ${ZIM_HOME}/init.zsh

# Module configuration post-init

# zsh-history-substring-search
zmodload -F zsh/terminfo +p:terminfo
for key ('^[[A' '^P' ${terminfo[kcuu1]}) bindkey ${key} history-substring-search-up
for key ('^[[B' '^N' ${terminfo[kcud1]}) bindkey ${key} history-substring-search-down
for key ('k') bindkey -M vicmd ${key} history-substring-search-up
for key ('j') bindkey -M vicmd ${key} history-substring-search-down
unset key

zstyle ':zim:prompt-pwd' git-root yes

# # Include hidden files in autocomplete:
# _comp_options+=(globdots)

# # Automatic rehash
# zstyle ':completion:*' rehash true

{{ if stat "/Applications/LM Studio.app" -}}
# Added by LM Studio CLI (lms)
export PATH="$PATH:/Users/austin/.lmstudio/bin"
# End of LM Studio CLI section
{{- end }}
{{ if or (lookPath "kiro") (stat "/Applications/Kiro.app") -}}
[[ "$TERM_PROGRAM" == "kiro" ]] && . "$(kiro --locate-shell-integration-path zsh)"
{{- end}}
