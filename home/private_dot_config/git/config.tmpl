{{- /* Initialize variables for use in this file */ -}}
{{- $programs := includeTemplate "programs" . | fromJson -}}
{{- /* $commitTemplate := joinPath .chezmoi.homeDir ".config/git/commit-message" */ -}}
{{- $commitTemplate := "" -}}
{{- $coreAttributesFile := joinPath .chezmoi.homeDir ".config/git/attributes" -}}
{{- $excludesFile := joinPath .chezmoi.homeDir ".config/git/ignore" -}}
{{- $skiplistFile := joinPath .chezmoi.homeDir ".config/git/commit-skiplist" -}}
{{- $identities := includeTemplate "1password_git_identities.tmpl" . | fromJson -}}
{{- $corePager := "" -}}
{{- $credentialsHelper := "" -}}
{{- $githubUser := "" -}}
{{- $githubToken := "" -}}
{{- $sequenceEditor := "" -}}
{{- $webBrowser := "" -}}

{{- if $programs.delta -}}
{{-   $corePager = $programs.delta -}}
{{- else if $programs.diff_so_fancy -}}
{{-   $corePager = printf "%s | less --tabs=4 -RFX" $programs.diff_so_fancy -}}
{{- end -}}

{{- $githubUser = .github.user -}}
{{- $githubToken = onepasswordRead "op://Personal/github-cli-tools/credential" .onepassword.personal -}}

{{- if $programs.interactive_rebase_tool -}}
{{-   $sequenceEditor = $programs.interactive_rebase_tool }}
{{- end -}}

{{- if or $programs.xdg_open $programs.macos_open -}}
{{-   $webBrowser = or $programs.xdg_open $programs.macos_open -}}
{{- end -}}

{{- if $programs.git_absorb -}}
[absorb]
  autoStageIfNothingStaged = true
{{- end }}

[advice]
  skippedCherryPicks = false
  addEmptyPathspec = false
  detachedHead = false
  statusHints = false

[apply]
  whitespace = nowarn

[blame]
  # ignoreRevsFile = .git-blame-ignore-revs

[branch]
  autosetuprebase = always
  sort = -committerdate

[color]
  ui = auto

[color "branch"]
  current = yellow reverse
  local = yellow bold
  remote = green bold
  plain = red bold

[color "status"]
  added = green
  changed = yellow bold
  untracked = white bold

[column]
  ui = auto

[commit]
{{- if $commitTemplate }}
  #  template = {{ $commitTemplate | quote }}
{{- end }}
  cleanup = scissors
  verbose = true
  gpgsign = true

[conflicts]
  editor = gvim

[core]
  abbrev = 12
{{- if $coreAttributesFile }}
  attributesFile = {{ $coreAttributesFile  | quote }}
{{- end }}
  autocrlf = input
  compression = -1
  editor = vim
{{- if $excludesFile }}
  excludesFile = {{ $excludesFile | quote }}
{{- end }}
  fsmonitor = true
  # hooksPath = ""
{{- if $corePager }}
  pager = {{ $corePager }}
{{- end }}
  precomposeUnicode = true
  safecrlf = true
  whitespace = trailing-space,tab-in-indent,cr-at-eol,space-before-tab

[credential]
{{- if and (eq .chezmoi.os "darwin") $credentialsHelper }}
  helper = {{ quote $credentialsHelper }}
{{ else }}
  helper = cache --timeout=3600
{{- end }}
{{- if $programs.gh }}

[credential "https://github.com"]
  helper = !{{ $programs.gh }} auth git-credential

[credential "https://gist.github.com"]
  helper = !{{ $programs.gh }} auth git-credential
{{- end }}

[feature]
  manyFiles = true

[fetch]
  all = true
  fsckobjects = true
  prune = true
  pruneTags = true
  recurseSubmodules = on-demand

{{ if $skiplistFile -}}
[fetch.fsck]
    skipList = {{ $skiplistFile | quote }}
{{- end }}

[format]
  pretty = %C(yellow)%h%C(reset) %C(red)%ad%C(reset) | %s%d %C(green)[%aN]%C(reset)
  signOff = true

[gc]
  reflogexpire = 300
  reflogexpireunreachable = 90

{{ if $githubUser -}}
[github]
  user = {{ $githubUser | quote }}
{{- if $githubToken }}
  token = {{ $githubToken | quote }}
{{- end }}
{{- end }}

[gpg]
  format = ssh

[gpg "ssh"]
  allowedSignersFile = {{ joinPath "~" ".ssh/allowed_signers" }}
  # program = "/Applications/1Password.app/Contents/MacOS/op-ssh-sign"

[grep]
  extendRegexp = true
  lineNumber = true

[help]
  autocorrect = prompt

[index]
  # This can be removed as a default configuration after libgit2 1.7.3 or later.
  # https://github.com/libgit2/libgit2/issues/6531
  skipHash = false

[init]
  defaultBranch = main

[interactive]
  singleKey = true

[log]
  date = short
  decorate = auto
  showSignature = false

[pack]
  threads = 0
  writeReverseIndex = true
  useSparse = true

[pager]
  branch = false
  grep = false

[pretty]
  simple-oneline = "%C(yellow)%h%C(auto)%d %s <%C(green)%aN%C(reset)> (%C(blue)%ar%C(reset))"

[pull]
  rebase = true

[push]
  autoSetupRemote = true
  default = simple
  followTags = true
  gpgSign = false # if-asked

[rebase]
  autostash = true
  # autosquash = true
  missingCommitsCheck = error

[receive]
  fsckobjects = true

{{ if $skiplistFile -}}
[receive.fsck]
  skipList = {{ $skiplistFile | quote }}
{{- end }}

[stash]
  showPatch = true

[status]
  submoduleSummary = true

[submodule]
  fetchJobs = 0

[tag]
  forceSignAnnotated = true
  sort = version:refname
  gpgsign = true

[tar "tar.xz"]
  command = xz -c

[tar "tar.zst"]
  command = zstd -T0 -c

[transfer]
  fsckobjects = true

{{ if $programs.git_trim -}}
# https://github.com/foriequal0/git-trim
[trim]
  bases = master,main,gh-pages
{{- end }}

[versionsort]
  suffix = ""
  suffix = "-rc"
  suffix = "-pre"

# URL shorthands
[url "git@github.com:"]
  insteadOf = gh:
[url "git@gist.github.com:"]
  insteadOf = gist:
[url "git@bitbucket.org:"]
  insteadOf = bb:
{{  range $account_name, $configs := $identities -}}
{{-   range $config_name, $config := $configs -}}
{{-     range $_, $url := $config.data.url }}
[url {{ $url.use | quote }}]
  insteadOf = {{ $url.match }}{{ end }}{{ end }}{{ end }}

[user]
  useConfigOnly = true

{{ if $webBrowser -}}
[web]
  browser = {{ $webBrowser }}
{{- end }}

[rerere]
  enabled = true
  autoupdate = true

[sendemail]
  annotate = true
  confirm = always
  thread = true
  supersscc = self

{{ if $sequenceEditor -}}
[sequence]
  editor = {{ $sequenceEditor }}

{{- end }}
{{ if lookPath "git-lfs" -}}
[filter "lfs"]
  clean = git-lfs clean -- %f
  smudge = git-lfs smudge -- %f
  process = git-lfs filter-process
  required = true

{{- end }}
[include]
  path = ~/.config/git/aliases
[include]
  path = ~/.config/git/diff-merge
[include]
  path = /opt/local/share/git-delta/themes.gitconfig

{{  range $account_name, $configs := $identities -}}
{{-   range $config_name, $config := $configs -}}
{{-     range $_, $include := $config.data.includes -}}
{{-       $name := printf "~/.config/git/identities/%s-%s-%s" $account_name $config_name $include.identity -}}
{{        if eq $include.type "remote_url" -}}
[includeIf "hasconfig:remote.*.url:{{ $include.match }}**"]
  path = {{ $name }}
{{ else if eq $include.type "gitdir" -}}
[includeIf "gitdir:{{ $include.match }}/**"]
  path = {{ $name }}
{{ else if eq $include.type "gitdir/i" -}}
[includeIf "gitdir/i:{{ $include.match }}/**"]
  path = {{ $name }}
{{ end }}{{ end }}{{ end }}{{ end }}

{{- "" -}}
{{/* vim: set filetype=gitconfig */}}
