{{- $work := has "work" (get . "roles" | default list) -}}
{{- $hex_api_keys := dict -}}
{{- $env := dict
      "ERL_AFLAGS"          "-kernel shell_history enabled shell_history_file_bytes 5242880"
      "RIPGREP_CONFIG_PATH" (joinPath .chezmoi.homeDir ".ripgreprc")
-}}
{{- $tools := dict
      "elixir"  "1.18.3-otp-27"
      "erlang"  "27.3.4"
      "gleam"   "latest"
      "node"    "20"
      "ruby"    "3.4"
      "usage"   "latest"
      "vacuum"  "latest"
      "zig"     "0.13"
-}}
{{- if $work -}}
{{-   $_ := set $tools "aws-vault" "7" -}}
{{-   $_ := set $tools "foundry" "latest" -}}
{{-   $_ := set $tools "go:github.com/telia-oss/aws-env/cmd/aws-env" "v1.3.0" -}}
{{-   $_ := set $tools "go:newreleases.io/cmd/newreleases" "latest" -}}
{{-   $_ := set $tools "k9s" "latest" -}}
{{-   $_ := set $tools "kubectl" "latest" -}}

{{-   $npm_package_token := ((output "gh" "auth" "token" "--user" .github.work) | trim) -}}
{{-   $_ := set $env "NPM_PACKAGE_TOKEN" $npm_package_token -}}
{{-   $_ := set $hex_api_keys "vivo" (onepasswordRead "op://xlol453p46nfdqodyw62qzk63m/rlvbids4mm46mozbxeplzfphem/credential" .op.personal) -}}
{{- end -}}
{{- range $name, $value := $hex_api_keys -}}
{{-   $name = printf "%s_HEX_API_KEY" ($name | jq "ascii_upcase" | first) -}}
{{-   $_ := set $env $name $value -}}
{{- end -}}

min_version = "2024.12.23"

[settings]
always_keep_download = false
always_keep_install = false
experimental = true
idiomatic_version_file = false
legacy_version_file = false
paranoid = true

[settings.ruby]
default_packages_file = {{ joinPath .chezmoi.homeDir ".config/packages/default_gems" | quote }}

{{ dict "env" $env | toToml }}
{{ dict "tools" $tools | toToml }}

{{- if gt (len $hex_api_keys) 0 }}

[tasks.hex-auth]
description = "Authenticate Private hex.pm Organizations"
run = [
  "echo Authenticating Private hex.pm Organizations",
{{- range $_, $name := keys $hex_api_keys }}
  "mix hex.organizations auth {{ $name }} --key {{ printf "$%s_HEX_API_KEY" ($name | jq "ascii_upcase" | first) }}",
{{ end }}
]

[tasks.hex-auth.env]
{{ range $name, $value := $hex_api_keys -}}
{{ printf "%s_HEX_API_KEY" ($name | jq "ascii_upcase" | first) }} = {{ $value | quote }}{{ end }}
{{ end -}}
